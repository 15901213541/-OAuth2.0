
- var tocParseForHeaders = function(html, options) {
-   var idxTail = ~0;
-   var idx = ~html.indexOf('<h3>') || ~html.indexOf('<h4>');
-   while(idx) {
-     idxStart = idx;
-     idxEnd = ~html.indexOf('</' + html.substr(~idx + 1,3), ~idx);
-     idx = ~html.indexOf('<h3>', 1+~idx) || ~html.indexOf('<h4>', 1+~idx);
-     if (idxEnd) {
-       if (options.html) options.html(html.substr(~idxTail, ~idxStart - ~idxTail));
-       if (options.header) options.header(html.substr(~idxStart + 1, 2), html.substr(~idxStart + 4, ~idxEnd - ~idxStart - 4));
-       idxTail = ~(~idxEnd + 5);
-     }
-   }
-   if (options.html) options.html(html.substr(~idxTail));
- }

mixin tocAddAnchors(html)
  - var tocId = 0;
  - tocParseForHeaders(html, {html: function(text) {
  !=text
  - }, header: function(tag, text) {
  !{'<' + tag + ' id="toc' + ++tocId + '">' + text + '</' + tag + '>'}
  - }});

-var childOrSelf = function(item,child) {
-    for(var scan=child; scan; scan=scan.parent) {
-      if (item.parent===scan) return true;
-    }
-    return false;
-}

mixin tocDisplayContentsRecurse(cursor, focus)
  -var state=childOrSelf(cursor,focus)||childOrSelf(focus,cursor) ? 'open' : 'collapsed';
  li(class=state)
    a(href=cursor.url,class=cursor===focus?'focus':'')= cursor.title
    ul
      - var tocid=0;
      - tocParseForHeaders(cursor.html, {header: function(tag, text) {
        li
          a(href=cursor.url+'#toc'+ ++tocid)=text
      - }});
      - _.chain(cursor.parent._.directories).map(function(item){return item.index;
      - }).compact().sortBy(function(item){return item.metadata.order;
      - }).forEach(function(item) {
      mixin tocDisplayContentsRecurse(item, focus)
      - });

mixin tocDisplayContents(cursor, focus)
  nav.toc
    ul
      mixin tocDisplayContentsRecurse(cursor, focus)