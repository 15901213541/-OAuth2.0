@using System
@using System.Linq
@using System.Security.Claims
@using System.Security.Principal
@using System.Web
@using Katana.Sandbox.WebServer
@{
    if (Request.HttpMethod == "POST")
    {
        if (!string.IsNullOrEmpty(Request.Form.Get("submit.Signin")))
        {
            var isPersistent = !string.IsNullOrEmpty(Request.Form.Get("isPersistent"));

            Context.SignIn("Forms", isPersistent, new Claim(ClaimTypes.Name, Request.Form["username"]));
            return;
        }
        foreach (var key in Request.Form.AllKeys)
        {
            if (key.StartsWith("submit.External.") && !string.IsNullOrEmpty(Request.Form.Get(key)))
            {
                Context.Unauthorized(key.Substring("submit.External.".Length));
                return;                
            }
        }
    }
    else
    {
        var external = Context.AuthenticateSingle("External").Result;
        if (external != null)
        {
            Context.SignOut("External");
            Context.SignIn("Forms", true, external.Claims);
            return;
        }
    }    
}

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Login</title>
</head>
<body>
    <h1>Katana.Sandbox.WebServer</h1>
    <h2>Forms Login</h2>
    <form method="POST">
        <ul>
            <li>
                <label for="username">User name: </label>
                <input type="text" id="username" name="username" /></li>
            <li>
                <label for="password">Password: </label>
                <input type="password" id="password" name="password" /></li>
            <li>
                <input type="checkbox" id="isPersistent" name="isPersistent" checked="checked" />
                <label for="isPersistent">Remember Me</label>
                <input type="submit" name="submit.Signin" value="Sign In" />
            </li>
        </ul>
        <h2>Third Party Login</h2>
        <ul>
            @foreach (var metadata in Context.GetAuthenticationTypes().Result)
            {
                object authenticationType;
                object caption;
                if (metadata.Properties.TryGetValue("AuthenticationType", out authenticationType) && 
                    metadata.Properties.TryGetValue("Caption", out caption))
                {
                <li>
                    <input type="submit" name="submit.External.@authenticationType" value="@caption" /></li>
                }
            }
        </ul>
    </form>
</body>
</html>
